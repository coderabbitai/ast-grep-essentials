id: postgres-empty-password-rust
snapshots:
  ? |
    async fn test2() -> Result<(), anyhow::Error> {
    asa = "";
    let (client, connection) = postgres::Config::new()
    .host(shard_host_name.as_str())
    .user("postgres")
    .password(asa)
    .dbname("ninja")
    .keepalives_idle(std::time::Duration::from_secs(30))
    .connect(NoTls)
    .map_err(|e| {
       error!(log, "failed to connect to {}: {}", &shard_host_name, e);
       Error::new(ErrorKind::Other, e)
    })?;
    Ok(())
    }
  : labels:
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
        .user("postgres")
        .password(asa)
      style: primary
      start: 85
      end: 173
    - source: postgres::Config::new()
      style: secondary
      start: 85
      end: 108
    - source: |-
        postgres::Config::new()
        .host
      style: secondary
      start: 85
      end: 114
    - source: (shard_host_name.as_str())
      style: secondary
      start: 114
      end: 140
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
      style: secondary
      start: 85
      end: 140
    - source: user
      style: secondary
      start: 142
      end: 146
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
        .user
      style: secondary
      start: 85
      end: 146
    - source: ("postgres")
      style: secondary
      start: 146
      end: 158
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
        .user("postgres")
      style: secondary
      start: 85
      end: 158
    - source: password
      style: secondary
      start: 160
      end: 168
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
        .user("postgres")
        .password
      style: secondary
      start: 85
      end: 168
    - source: asa
      style: secondary
      start: 169
      end: 172
    - source: (asa)
      style: secondary
      start: 168
      end: 173
    - source: asa
      style: secondary
      start: 48
      end: 51
    - source: '""'
      style: secondary
      start: 54
      end: 56
    - source: asa = ""
      style: secondary
      start: 48
      end: 56
    - source: asa = "";
      style: secondary
      start: 48
      end: 57
    - source: |-
        let (client, connection) = postgres::Config::new()
        .host(shard_host_name.as_str())
        .user("postgres")
        .password(asa)
        .dbname("ninja")
        .keepalives_idle(std::time::Duration::from_secs(30))
        .connect(NoTls)
        .map_err(|e| {
           error!(log, "failed to connect to {}: {}", &shard_host_name, e);
           Error::new(ErrorKind::Other, e)
        })?;
      style: secondary
      start: 58
      end: 382
  ? |
    fn test1() {
    let mut config = postgres::Config::new();
    as = "";
    config
     .host(std::env::var("HOST").expect("set HOST"))
     .user(std::env::var("USER").expect("set USER"))
     .password(as)
     .port(std::env::var("PORT").expect("set PORT"));
    let (client, connection) = config.connect(NoTls);
    Ok(())
    }
  : labels:
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password(as)
      style: primary
      start: 64
      end: 183
    - source: config
      style: secondary
      start: 64
      end: 70
    - source: |-
        config
         .host
      style: secondary
      start: 64
      end: 77
    - source: (std::env::var("HOST").expect("set HOST"))
      style: secondary
      start: 77
      end: 119
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
      style: secondary
      start: 64
      end: 119
    - source: user
      style: secondary
      start: 122
      end: 126
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user
      style: secondary
      start: 64
      end: 126
    - source: (std::env::var("USER").expect("set USER"))
      style: secondary
      start: 126
      end: 168
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
      style: secondary
      start: 64
      end: 168
    - source: password
      style: secondary
      start: 171
      end: 179
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password
      style: secondary
      start: 64
      end: 179
    - source: as
      style: secondary
      start: 180
      end: 182
    - source: (as)
      style: secondary
      start: 179
      end: 183
    - source: config
      style: secondary
      start: 21
      end: 27
    - source: postgres::Config::new()
      style: secondary
      start: 30
      end: 53
    - source: let mut config = postgres::Config::new();
      style: secondary
      start: 13
      end: 54
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password(as)
         .port(std::env::var("PORT").expect("set PORT"));
      style: secondary
      start: 64
      end: 233
    - source: as
      style: secondary
      start: 55
      end: 57
    - source: '""'
      style: secondary
      start: 60
      end: 62
    - source: as = ""
      style: secondary
      start: 55
      end: 62
    - source: as = "";
      style: secondary
      start: 55
      end: 63
    - source: |-
        {
        let mut config = postgres::Config::new();
        as = "";
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password(as)
         .port(std::env::var("PORT").expect("set PORT"));
        let (client, connection) = config.connect(NoTls);
        Ok(())
        }
      style: secondary
      start: 11
      end: 292
  ? |-
    fn test1() {
    let mut config = postgres::Config::new();
    config
     .host(std::env::var("HOST").expect("set HOST"))
     .user(std::env::var("USER").expect("set USER"))
     .password("")
     .port(std::env::var("PORT").expect("set PORT"));
    let (client, connection) = config.connect(NoTls);
    Ok(())
    }
  : labels:
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password("")
      style: primary
      start: 55
      end: 174
    - source: config
      style: secondary
      start: 55
      end: 61
    - source: |-
        config
         .host
      style: secondary
      start: 55
      end: 68
    - source: (std::env::var("HOST").expect("set HOST"))
      style: secondary
      start: 68
      end: 110
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
      style: secondary
      start: 55
      end: 110
    - source: user
      style: secondary
      start: 113
      end: 117
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user
      style: secondary
      start: 55
      end: 117
    - source: (std::env::var("USER").expect("set USER"))
      style: secondary
      start: 117
      end: 159
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
      style: secondary
      start: 55
      end: 159
    - source: password
      style: secondary
      start: 162
      end: 170
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password
      style: secondary
      start: 55
      end: 170
    - source: '""'
      style: secondary
      start: 171
      end: 173
    - source: ("")
      style: secondary
      start: 170
      end: 174
    - source: config
      style: secondary
      start: 21
      end: 27
    - source: postgres::Config::new()
      style: secondary
      start: 30
      end: 53
    - source: let mut config = postgres::Config::new();
      style: secondary
      start: 13
      end: 54
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password("")
         .port(std::env::var("PORT").expect("set PORT"));
      style: secondary
      start: 55
      end: 224
  ? |
    fn test1() {
    let mut config = postgres::Config::new();
    config
    .host(std::env::var("HOST").expect("set HOST"))
    .user(std::env::var("USER").expect("set USER"))
    .password("")
    .port(std::env::var("PORT").expect("set PORT"));
    let (client, connection) = config.connect(NoTls);
    Ok(())
    }
  : labels:
    - source: |-
        config
        .host(std::env::var("HOST").expect("set HOST"))
        .user(std::env::var("USER").expect("set USER"))
        .password("")
      style: primary
      start: 55
      end: 171
    - source: config
      style: secondary
      start: 55
      end: 61
    - source: |-
        config
        .host
      style: secondary
      start: 55
      end: 67
    - source: (std::env::var("HOST").expect("set HOST"))
      style: secondary
      start: 67
      end: 109
    - source: |-
        config
        .host(std::env::var("HOST").expect("set HOST"))
      style: secondary
      start: 55
      end: 109
    - source: user
      style: secondary
      start: 111
      end: 115
    - source: |-
        config
        .host(std::env::var("HOST").expect("set HOST"))
        .user
      style: secondary
      start: 55
      end: 115
    - source: (std::env::var("USER").expect("set USER"))
      style: secondary
      start: 115
      end: 157
    - source: |-
        config
        .host(std::env::var("HOST").expect("set HOST"))
        .user(std::env::var("USER").expect("set USER"))
      style: secondary
      start: 55
      end: 157
    - source: password
      style: secondary
      start: 159
      end: 167
    - source: |-
        config
        .host(std::env::var("HOST").expect("set HOST"))
        .user(std::env::var("USER").expect("set USER"))
        .password
      style: secondary
      start: 55
      end: 167
    - source: '""'
      style: secondary
      start: 168
      end: 170
    - source: ("")
      style: secondary
      start: 167
      end: 171
    - source: config
      style: secondary
      start: 21
      end: 27
    - source: postgres::Config::new()
      style: secondary
      start: 30
      end: 53
    - source: let mut config = postgres::Config::new();
      style: secondary
      start: 13
      end: 54
    - source: |-
        config
        .host(std::env::var("HOST").expect("set HOST"))
        .user(std::env::var("USER").expect("set USER"))
        .password("")
        .port(std::env::var("PORT").expect("set PORT"));
      style: secondary
      start: 55
      end: 220
