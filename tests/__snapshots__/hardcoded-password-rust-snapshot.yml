id: hardcoded-password-rust
snapshots:
  ? |
    use sqlx::mysql::{MySqlConnectOptions, MySqlConnection, MySqlPool, MySqlSslMode};
    async fn test1() -> Result<(), sqlx::Error> {
    let conn = MySqlConnectOptions::new()
     .host("localhost")
     .username("root")
     .password("password")
     .database("db")
     .connect().await?;

    use_connection(conn);
    Ok(())
    }
  : labels:
    - source: |-
        MySqlConnectOptions::new()
         .host("localhost")
         .username("root")
         .password("password")
      style: primary
      start: 139
      end: 227
    - source: ()
      style: secondary
      start: 163
      end: 165
    - source: MySqlConnectOptions::new
      style: secondary
      start: 139
      end: 163
    - source: |-
        MySqlConnectOptions::new()
         .host("localhost")
         .username("root")
      style: secondary
      start: 139
      end: 204
    - source: password
      style: secondary
      start: 207
      end: 215
    - source: |-
        MySqlConnectOptions::new()
         .host("localhost")
         .username("root")
         .password
      style: secondary
      start: 139
      end: 215
    - source: password
      style: secondary
      start: 217
      end: 225
    - source: '"password"'
      style: secondary
      start: 216
      end: 226
    - source: ("password")
      style: secondary
      start: 215
      end: 227
    - source: sqlx::mysql
      style: secondary
      start: 4
      end: 15
    - source: MySqlConnectOptions
      style: secondary
      start: 18
      end: 37
    - source: '{MySqlConnectOptions, MySqlConnection, MySqlPool, MySqlSslMode}'
      style: secondary
      start: 17
      end: 80
    - source: sqlx::mysql::{MySqlConnectOptions, MySqlConnection, MySqlPool, MySqlSslMode}
      style: secondary
      start: 4
      end: 80
    - source: use sqlx::mysql::{MySqlConnectOptions, MySqlConnection, MySqlPool, MySqlSslMode};
      style: secondary
      start: 0
      end: 81
    - source: use sqlx::mysql::{MySqlConnectOptions, MySqlConnection, MySqlPool, MySqlSslMode};
      style: secondary
      start: 0
      end: 81
  ? |-
    use sqlx::postgres::{PgConnectOptions, PgConnection, PgPool, PgSslMode};
    async fn test3() -> Result<(), sqlx::Error> {
    let pg = PgConnectOptions::new();
    let conn = pg.host("secret-host")
    .port(2525)
    .username("secret-user")
    .password("secret-password")
    .ssl_mode(PgSslMode::Require)
    .connect()
    .await?;

    use_connection(conn);
    Ok(())
    }
  : labels:
    - source: |-
        pg.host("secret-host")
        .port(2525)
        .username("secret-user")
        .password("secret-password")
      style: primary
      start: 164
      end: 252
    - source: pg
      style: secondary
      start: 164
      end: 166
    - source: password
      style: secondary
      start: 225
      end: 233
    - source: |-
        pg.host("secret-host")
        .port(2525)
        .username("secret-user")
        .password
      style: secondary
      start: 164
      end: 233
    - source: secret-password
      style: secondary
      start: 235
      end: 250
    - source: '"secret-password"'
      style: secondary
      start: 234
      end: 251
    - source: ("secret-password")
      style: secondary
      start: 233
      end: 252
    - source: sqlx::postgres
      style: secondary
      start: 4
      end: 18
    - source: PgConnectOptions
      style: secondary
      start: 21
      end: 37
    - source: '{PgConnectOptions, PgConnection, PgPool, PgSslMode}'
      style: secondary
      start: 20
      end: 71
    - source: sqlx::postgres::{PgConnectOptions, PgConnection, PgPool, PgSslMode}
      style: secondary
      start: 4
      end: 71
    - source: use sqlx::postgres::{PgConnectOptions, PgConnection, PgPool, PgSslMode};
      style: secondary
      start: 0
      end: 72
    - source: use sqlx::postgres::{PgConnectOptions, PgConnection, PgPool, PgSslMode};
      style: secondary
      start: 0
      end: 72
    - source: pg
      style: secondary
      start: 123
      end: 125
    - source: PgConnectOptions::new
      style: secondary
      start: 128
      end: 149
    - source: ()
      style: secondary
      start: 149
      end: 151
    - source: PgConnectOptions::new()
      style: secondary
      start: 128
      end: 151
    - source: let pg = PgConnectOptions::new();
      style: secondary
      start: 119
      end: 152
    - source: let pg = PgConnectOptions::new();
      style: secondary
      start: 119
      end: 152
