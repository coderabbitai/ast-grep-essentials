id: jwt-simple-noverify-javascript
snapshots:
  ? "const jwt = require('jwt-simple'); \n\napp.get('/protectedRoute1', (req, res) => {\n  const token = req.headers.authorization;\n\n  if (!token) {\n    return res.status(401).json({ error: 'Unauthorized. Token missing.' });\n  }\n\n  try {\n    // ruleid: jwt-simple-noverify  \n    const decoded = jwt.decode(token, secretKey, 'HS256', 12);\n    res.json({ message: `Hello ${decoded.username}` });\n  } catch (error) {\n    res.status(401).json({ error: 'Unauthorized. Invalid token.' });\n  }\n});\n"
  : labels:
    - source: jwt.decode(token, secretKey, 'HS256', 12)
      style: primary
      start: 287
      end: 328
    - source: jwt
      style: secondary
      start: 6
      end: 9
    - source: require('jwt-simple')
      style: secondary
      start: 12
      end: 33
    - source: const jwt = require('jwt-simple');
      style: secondary
      start: 0
      end: 34
    - source: const jwt = require('jwt-simple');
      style: secondary
      start: 0
      end: 34
  ? "const jwt = require('jwt-simple');  \n\napp.get('/protectedRoute2', (req, res) => {\n  const token = req.headers.authorization;\n\n  if (!token) {\n    return res.status(401).json({ error: 'Unauthorized. Token missing.' });\n  }\n\n  try {\n    // ruleid: jwt-simple-noverify   \n    const decoded = jwt.decode(token, secretKey, true);\n    res.json({ message: `Hello ${decoded.username}` });\n  } catch (error) {\n    res.status(401).json({ error: 'Unauthorized. Invalid token.' });\n  }\n});\n"
  : labels:
    - source: jwt.decode(token, secretKey, true)
      style: primary
      start: 289
      end: 323
    - source: jwt
      style: secondary
      start: 6
      end: 9
    - source: require('jwt-simple')
      style: secondary
      start: 12
      end: 33
    - source: const jwt = require('jwt-simple');
      style: secondary
      start: 0
      end: 34
    - source: const jwt = require('jwt-simple');
      style: secondary
      start: 0
      end: 34
  ? "const jwt = require('jwt-simple');  \n\napp.get('/protectedRoute3', (req, res) => {\n  const token = req.headers.authorization;\n\n  if (!token) {\n    return res.status(401).json({ error: 'Unauthorized. Token missing.' });\n  }\n\n  try {\n    // ruleid: jwt-simple-noverify    \n    const decoded = jwt.decode(token, secretKey, 'false');\n    res.json({ message: `Hello ${decoded.username}` });\n  } catch (error) {\n    res.status(401).json({ error: 'Unauthorized. Invalid token.' });\n  }\n});\n"
  : labels:
    - source: jwt.decode(token, secretKey, 'false')
      style: primary
      start: 290
      end: 327
    - source: jwt
      style: secondary
      start: 6
      end: 9
    - source: require('jwt-simple')
      style: secondary
      start: 12
      end: 33
    - source: const jwt = require('jwt-simple');
      style: secondary
      start: 0
      end: 34
    - source: const jwt = require('jwt-simple');
      style: secondary
      start: 0
      end: 34
