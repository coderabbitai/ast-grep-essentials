id: file-stat-before-action-c
snapshots:
  ? |
    if (stat(file.c_str(), &buf) == 0)
     {
        // Open the file for reading
        fp = fopen(file.c_str(), "r");
        if (fp == NULL)
        {
          char message[2560];
          sprintf(message, "File '%s' Cound Not be Opened", file.c_str());
          // DISPLAY_MSG_ERROR( this, message, "GetFileContents", "System" );
          throw message;
         }

        // Read the file
        MvString s, ss;
        while (fgets(data, sizeof(data), fp) != (char *)0)
        {
          s = data;
          s.trimBoth();
          if (s.compare(0, 5, "GROUP") == 0)
          {
            // size_t t = s.find_last_of( ":" );
            size_t t = s.find(":");
            if (t != string::npos){
              ss = s.substr(t + 1).c_str();
              ss.trimBoth();
              ss = ss.substr(1, ss.length() - 3).c_str();
              group_list.push_back(ss);
            }
         }

         // Close the file
         fclose(fp);
     }
  : labels:
    - source: fopen
      style: primary
      start: 80
      end: 85
    - source: file.c_str()
      style: secondary
      start: 86
      end: 98
    - source: (file.c_str(), "r")
      style: secondary
      start: 85
      end: 104
    - source: stat
      style: secondary
      start: 4
      end: 8
    - source: file.c_str()
      style: secondary
      start: 9
      end: 21
    - source: (file.c_str(), &buf)
      style: secondary
      start: 8
      end: 28
    - source: stat(file.c_str(), &buf)
      style: secondary
      start: 4
      end: 28
    - source: ==
      style: secondary
      start: 29
      end: 31
    - source: '0'
      style: secondary
      start: 32
      end: 33
    - source: stat(file.c_str(), &buf) == 0
      style: secondary
      start: 4
      end: 33
    - source: (stat(file.c_str(), &buf) == 0)
      style: secondary
      start: 3
      end: 34
    - source: |-
        if (stat(file.c_str(), &buf) == 0)
         {
            // Open the file for reading
            fp = fopen(file.c_str(), "r");
            if (fp == NULL)
            {
              char message[2560];
              sprintf(message, "File '%s' Cound Not be Opened", file.c_str());
              // DISPLAY_MSG_ERROR( this, message, "GetFileContents", "System" );
              throw message;
             }

            // Read the file
            MvString s, ss;
            while (fgets(data, sizeof(data), fp) != (char *)0)
            {
              s = data;
              s.trimBoth();
              if (s.compare(0, 5, "GROUP") == 0)
              {
                // size_t t = s.find_last_of( ":" );
                size_t t = s.find(":");
                if (t != string::npos){
                  ss = s.substr(t + 1).c_str();
                  ss.trimBoth();
                  ss = ss.substr(1, ss.length() - 3).c_str();
                  group_list.push_back(ss);
                }
             }

             // Close the file
             fclose(fp);
         }
      style: secondary
      start: 0
      end: 843
    - source: |-
        {
            // Open the file for reading
            fp = fopen(file.c_str(), "r");
            if (fp == NULL)
            {
              char message[2560];
              sprintf(message, "File '%s' Cound Not be Opened", file.c_str());
              // DISPLAY_MSG_ERROR( this, message, "GetFileContents", "System" );
              throw message;
             }

            // Read the file
            MvString s, ss;
            while (fgets(data, sizeof(data), fp) != (char *)0)
            {
              s = data;
              s.trimBoth();
              if (s.compare(0, 5, "GROUP") == 0)
              {
                // size_t t = s.find_last_of( ":" );
                size_t t = s.find(":");
                if (t != string::npos){
                  ss = s.substr(t + 1).c_str();
                  ss.trimBoth();
                  ss = ss.substr(1, ss.length() - 3).c_str();
                  group_list.push_back(ss);
                }
             }

             // Close the file
             fclose(fp);
         }
      style: secondary
      start: 36
      end: 843
    - source: fopen(file.c_str(), "r")
      style: secondary
      start: 80
      end: 104
  ? "if (stat(file.c_str(), &buf) == 0){\n  // Open the file for reading\n  fp = fopen(file.c_str(), \"r\");\n  if (fp == NULL){\n    char message[2560];\n    sprintf(message, \"File '%s' Cound Not be Opened\", file.c_str());\n    // DISPLAY_MSG_ERROR( this, message, \"GetFileContents\", \"System\" );\n    throw message;\n  }\n\n  // Read the file\n  MvString s, ss;\n  while (fgets(data, sizeof(data), fp) != (char *)0){\n    s = data;\n    s.trimBoth();\n    if (s.compare(0, 5, \"GROUP\") == 0){\n      // size_t t = s.find_last_of( \":\" );\n      size_t t = s.find(\":\");\n      \n      if (t != string::npos){\n        ss = s.substr(t + 1).c_str();\n        ss.trimBoth();\n        ss = ss.substr(1, ss.length() - 3).c_str();\n        group_list.push_back(ss);\n      }\n    }\n  }\n\n  // Close the file\n  fclose(fp);\n}\n"
  : labels:
    - source: fopen
      style: primary
      start: 74
      end: 79
    - source: file.c_str()
      style: secondary
      start: 80
      end: 92
    - source: (file.c_str(), "r")
      style: secondary
      start: 79
      end: 98
    - source: stat
      style: secondary
      start: 4
      end: 8
    - source: file.c_str()
      style: secondary
      start: 9
      end: 21
    - source: (file.c_str(), &buf)
      style: secondary
      start: 8
      end: 28
    - source: stat(file.c_str(), &buf)
      style: secondary
      start: 4
      end: 28
    - source: ==
      style: secondary
      start: 29
      end: 31
    - source: '0'
      style: secondary
      start: 32
      end: 33
    - source: stat(file.c_str(), &buf) == 0
      style: secondary
      start: 4
      end: 33
    - source: (stat(file.c_str(), &buf) == 0)
      style: secondary
      start: 3
      end: 34
    - source: "if (stat(file.c_str(), &buf) == 0){\n  // Open the file for reading\n  fp = fopen(file.c_str(), \"r\");\n  if (fp == NULL){\n    char message[2560];\n    sprintf(message, \"File '%s' Cound Not be Opened\", file.c_str());\n    // DISPLAY_MSG_ERROR( this, message, \"GetFileContents\", \"System\" );\n    throw message;\n  }\n\n  // Read the file\n  MvString s, ss;\n  while (fgets(data, sizeof(data), fp) != (char *)0){\n    s = data;\n    s.trimBoth();\n    if (s.compare(0, 5, \"GROUP\") == 0){\n      // size_t t = s.find_last_of( \":\" );\n      size_t t = s.find(\":\");\n      \n      if (t != string::npos){\n        ss = s.substr(t + 1).c_str();\n        ss.trimBoth();\n        ss = ss.substr(1, ss.length() - 3).c_str();\n        group_list.push_back(ss);\n      }\n    }\n  }\n\n  // Close the file\n  fclose(fp);\n}"
      style: secondary
      start: 0
      end: 782
    - source: "{\n  // Open the file for reading\n  fp = fopen(file.c_str(), \"r\");\n  if (fp == NULL){\n    char message[2560];\n    sprintf(message, \"File '%s' Cound Not be Opened\", file.c_str());\n    // DISPLAY_MSG_ERROR( this, message, \"GetFileContents\", \"System\" );\n    throw message;\n  }\n\n  // Read the file\n  MvString s, ss;\n  while (fgets(data, sizeof(data), fp) != (char *)0){\n    s = data;\n    s.trimBoth();\n    if (s.compare(0, 5, \"GROUP\") == 0){\n      // size_t t = s.find_last_of( \":\" );\n      size_t t = s.find(\":\");\n      \n      if (t != string::npos){\n        ss = s.substr(t + 1).c_str();\n        ss.trimBoth();\n        ss = ss.substr(1, ss.length() - 3).c_str();\n        group_list.push_back(ss);\n      }\n    }\n  }\n\n  // Close the file\n  fclose(fp);\n}"
      style: secondary
      start: 34
      end: 782
    - source: fopen(file.c_str(), "r")
      style: secondary
      start: 74
      end: 98
