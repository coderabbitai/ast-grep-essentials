id: tokio-postgres-hardcoded-password-rust
valid:
  - |
    async fn test1() -> Result<(), anyhow::Error> {
    let mut config = tokio_postgres::Config::new();
    config
    .host(std::env::var("HOST").expect("set HOST"))
    .user(std::env::var("USER").expect("set USER"))
    .password("")
    .port(std::env::var("PORT").expect("set PORT"));
    Ok(())
    }
invalid:
  - |
    async fn test2() -> Result<(), anyhow::Error> {
    let (client, connection) = tokio_postgres::Config::new()
    .host(shard_host_name.as_str())
    .user("postgres")
    .password("postgres")
    .dbname("moray")
    .keepalives_idle(std::time::Duration::from_secs(30))
    .connect(NoTls)
    .await
    .map_err(|e| {
    error!(log, "failed to connect to {}: {}", &shard_host_name, e);
    Error::new(ErrorKind::Other, e)
    })?;
