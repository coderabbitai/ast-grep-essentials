id: jedis-jedisclientconfig-hardcoded-password-java
valid:
  - |
    import redis.clients.jedis.JedisClientConfig;
    import redis.clients.jedis.DefaultJedisClientConfig;
    public class JedisTest {
    void run() {
    new DefaultJedisClientConfig(connectionTimeoutMillis, socketTimeoutMillis,
    blockingSocketTimeoutMillis, user, identifier, database, clientName, ssl, sslSocketFactory,
    sslParameters, hostnameVerifier, hostAndPortMapper);
    }
    }
invalid:
  - |
    import redis.clients.jedis.JedisClientConfig;
    import redis.clients.jedis.DefaultJedisClientConfig;
    public class JedisTest {
    void run() {
    new DefaultJedisClientConfig(connectionTimeoutMillis, socketTimeoutMillis,
    blockingSocketTimeoutMillis, user, "identifier", database, clientName, ssl, sslSocketFactory,
    sslParameters, hostnameVerifier, hostAndPortMapper);
    }
    }
  - |
    import redis.clients.jedis.JedisClientConfig;
    import redis.clients.jedis.DefaultJedisClientConfig;
    public class JedisTest {
    void run() {
    JedisClientConfig cc = DefaultJedisClientConfig.builder()
            .password("asdf")
            .ssl(useSsl)
            .build();
    }
    }
  - |
    import redis.clients.jedis.JedisClientConfig;
    import redis.clients.jedis.DefaultJedisClientConfig;
    public class JedisTest {
    void run() {
    JedisClientConfig cc = DefaultJedisClientConfig.builder()
            .password("asdf")
            .ssl(useSsl)
            .build();
    cc.updatePassword("hello");
    }
    }
  - |
    import redis.clients.jedis.JedisClientConfig;
    import redis.clients.jedis.DefaultJedisClientConfig;
    public class JedisTest {
    void run() {
    DefaultJedisClientConfig.Builder builder = DefaultJedisClientConfig.builder();
        builder.password("asdf");
    }
    }