id: passwordauthentication-hardcoded-password-java
valid:
  - |
     import java.net.http.HttpRequest;
     import java.net.PasswordAuthentication;
     public class UhOh {
     public void run(){
        String b64token = "d293ZWU6d2Fob28=";
        String basictoken = "Basic d293ZWU6d2Fob28="

        var authClient = HttpClient
            .newBuilder()
            .authenticator(new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                   
                    new PasswordAuthentication("postman", "password");
                }
            })
            .build();
     }
     }
invalid:
  - |
    import java.net.http.HttpRequest;
    import java.net.PasswordAuthentication;
     public class UhOh {
     public void run(){
        String b64token = "d293ZWU6d2Fob28=";
        String basictoken = "Basic d293ZWU6d2Fob28="

        var authClient = HttpClient
            .newBuilder()
            .authenticator(new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    char[] asdf = "password".toCharArray()
                    new PasswordAuthentication("postman", asdf);
            })
            .build();
    }
    }
  - |
    import java.net.http.HttpRequest;
    import java.net.PasswordAuthentication;
     public class UhOh {
     public void run(){
        String b64token = "d293ZWU6d2Fob28=";
        String basictoken = "Basic d293ZWU6d2Fob28="

        var authClient = HttpClient
            .newBuilder()
            .authenticator(new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    new PasswordAuthentication("postman", "password".toCharArray());
            })
            .build();
    }
    }