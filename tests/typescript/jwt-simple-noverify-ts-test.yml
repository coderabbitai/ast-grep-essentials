id: jwt-simple-noverify-ts
valid:
  - |
    const jwt = require('jwt-simple');   
    app.get('/protectedRoute4', (req, res) => {
      const token = req.headers.authorization;

      if (!token) {
        return res.status(401).json({ error: 'Unauthorized. Token missing.' });
      }

      try {
        // ok: jwt-simple-noverify   
        const decoded = jwt.decode(token, secretKey);
        res.json({ message: `Hello ${decoded.username}` });
      } catch (error) {
        res.status(401).json({ error: 'Unauthorized. Invalid token.' });
      }
    });
  - |
    const jwt = require('jwt-simple'); 
    app.get('/protectedRoute5', (req, res) => {
      const token = req.headers.authorization;

      if (!token) {
        return res.status(401).json({ error: 'Unauthorized. Token missing.' });
      }

      try {
        // ok: jwt-simple-noverify    
        const decoded = jwt.decode(token, secretKey, false);
        res.json({ message: `Hello ${decoded.username}` });
      } catch (error) {
        res.status(401).json({ error: 'Unauthorized. Invalid token.' });
      }
    });
invalid:
  - |
    const jwt = require('jwt-simple'); 

    app.get('/protectedRoute1', (req, res) => {
      const token = req.headers.authorization;

      if (!token) {
        return res.status(401).json({ error: 'Unauthorized. Token missing.' });
      }

      try {
        // ruleid: jwt-simple-noverify  
        const decoded = jwt.decode(token, secretKey, 'HS256', 12);
        res.json({ message: `Hello ${decoded.username}` });
      } catch (error) {
        res.status(401).json({ error: 'Unauthorized. Invalid token.' });
      }
    });
  - |
    const jwt = require('jwt-simple');  

    app.get('/protectedRoute2', (req, res) => {
      const token = req.headers.authorization;

      if (!token) {
        return res.status(401).json({ error: 'Unauthorized. Token missing.' });
      }

      try {
        // ruleid: jwt-simple-noverify   
        const decoded = jwt.decode(token, secretKey, true);
        res.json({ message: `Hello ${decoded.username}` });
      } catch (error) {
        res.status(401).json({ error: 'Unauthorized. Invalid token.' });
      }
    });
  - |
    const jwt = require('jwt-simple');  

    app.get('/protectedRoute3', (req, res) => {
      const token = req.headers.authorization;

      if (!token) {
        return res.status(401).json({ error: 'Unauthorized. Token missing.' });
      }

      try {
        // ruleid: jwt-simple-noverify    
        const decoded = jwt.decode(token, secretKey, 'false');
        res.json({ message: `Hello ${decoded.username}` });
      } catch (error) {
        res.status(401).json({ error: 'Unauthorized. Invalid token.' });
      }
    });
