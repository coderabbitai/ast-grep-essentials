id: return-c-str-c
language: c
severity: warning
message: >-
  `$FUNC` returns a pointer to the memory owned by `$STR`. This pointer
   is invalid after `$STR` goes out of scope, which can trigger a use after
   free.
note: >-
  [CWE-416] Use After Free
  [REFERENCES]
      - https://wiki.sei.cmu.edu/confluence/display/c/DCL30-C.+Declare+objects+with+appropriate+storage+durations
      - https://wiki.sei.cmu.edu/confluence/display/cplusplus/EXP54-CPP.+Do+not+access+an+object+outside+of+its+lifetime
utils:
  MATCH_PATTERN_STR_METHOD_WITH_STD_TWO:
    kind: return_statement
    all:
      - has:
          stopBy: end
          kind: call_expression
          all:
            - has:
                stopBy: end
                kind: field_expression
                all:
                  - has:
                      stopBy: end
                      kind: identifier
                      pattern: $E
                  - has:
                      stopBy: end
                      kind: field_identifier
                      pattern: $METHOD
            - has:
                stopBy: end
                kind: argument_list
      - follows:
          stopBy: end
          kind: labeled_statement
          all:
            - has:
                stopBy: end
                kind: statement_identifier
                regex: "^std$"
            - has:
                stopBy: end
                kind: identifier
                regex: "^basic_string<$TYPE>|string|wstring$"
            - has:
                stopBy: end
                kind: expression_statement
                all:
                  - has:
                      stopBy: end
                      kind: identifier
                      patttern: $E
      - inside:
          stopBy: end
          kind: compound_statement
          not:
            follows:
              stopBy: end
              kind: function_declarator
              has:
                stopBy: neighbor
                kind: identifier
                regex: "return.*"
  MATCH_PATTERN_STR_METHOD_WITH_STD_THREE:
    kind: return_statement
    all:
      - has:
          stopBy: end
          kind: call_expression
          all:
            - has:
                stopBy: end
                kind: field_expression
                all:
                  - has:
                      stopBy: end
                      kind: identifier
                      pattern: $E
                  - has:
                      stopBy: end
                      kind: field_identifier
                      pattern: $METHOD
            - has:
                stopBy: end
                kind: argument_list
      - inside:
          stopBy: end
          kind: compound_statement
          follows:
            stopBy: end
            kind: pointer_declarator
            has:
              stopBy: end
              kind: parameter_list
              all:
                - has:
                    stopBy: end
                    kind: type_identifier
                    regex: "^std$"
                - has:
                    stopBy: end
                    kind: identifier
                    regex: "^basic_string<$TYPE>|string|wstring$"
                - has:
                    stopBy: end
                    kind: identifier
                    pattern: $E
  MATCH_PATTERN_STR_METHOD_WITHOUT_STD_THREE:
    kind: return_statement
    all:
      - has:
          stopBy: end
          kind: call_expression
          all:
            - has:
                stopBy: end
                kind: field_expression
                all:
                  - has:
                      stopBy: end
                      kind: identifier
                      pattern: $E
                  - has:
                      stopBy: end
                      kind: field_identifier
                      pattern: $METHOD
            - has:
                stopBy: end
                kind: argument_list
      - inside:
          stopBy: end
          kind: compound_statement
          follows:
            stopBy: end
            kind: pointer_declarator
            has:
              stopBy: end
              kind: parameter_list
              has:
                stopBy: end
                kind: parameter_declaration
                all:
                  - has:
                      stopBy: end
                      kind: type_identifier
                      regex: "^basic_string<$TYPE>|string|wstring$"
                  - has:
                      stopBy: neighbor
                      kind: identifier
                      pattern: $E
  MATCH_PATTERN_STR_METHOD_WITHOUT_STD_TWO:
    kind: return_statement
    all:
      - has:
          stopBy: end
          kind: call_expression
          all:
            - has:
                stopBy: end
                kind: field_expression
                all:
                  - has:
                      stopBy: end
                      kind: identifier
                      pattern: $T
                  - has:
                      stopBy: end
                      kind: field_identifier
                      pattern: $METHOD
            - has:
                stopBy: end
                kind: argument_list
      - follows:
          stopBy: end
          kind: declaration
          all:
            - has:
                stopBy: neighbor
                kind: type_identifier
                regex: "^basic_string<$TYPE>|string|wstring$"
            - has:
                stopBy: neighbor
                kind: identifier
                pattern: $T
rule:
  any:
    - pattern: return basic_string<$TYPE>($$$).$METHOD();
    - pattern: return std::basic_string<$TYPE>($$$).$METHOD();
    - pattern: return string($$$).$METHOD();
    - pattern: return std::string($$$).$METHOD();
    - pattern: return wstring($$$).$METHOD();
    - pattern: return std::wstring($$$).$METHOD();
    - matches: MATCH_PATTERN_STR_METHOD_WITH_STD_TWO
    - matches: MATCH_PATTERN_STR_METHOD_WITHOUT_STD_TWO
    - matches: MATCH_PATTERN_STR_METHOD_WITH_STD_THREE
    - matches: MATCH_PATTERN_STR_METHOD_WITHOUT_STD_THREE

constraints:
  METHOD:
    regex: "c_str|data"
