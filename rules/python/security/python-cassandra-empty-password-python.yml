id: python-cassandra-empty-password-python
language: python
severity: warning
message: >-
  The application creates a database connection with an empty password.
      This can lead to unauthorized access by either an internal or external
      malicious actor. To prevent this vulnerability, enforce authentication
      when connecting to a database by using environment variables to securely
      provide credentials or retrieving them from a secure vault or HSM
      (Hardware Security Module).
note: >-
  [CWE-287]: Improper Authentication
  [REFERENCES]
      - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html

utils:
  from_imported_module:
    any:
      - pattern: PlainTextAuthProvider($USER, $QUOTES)
      - pattern: PlainTextAuthProvider($USER, $QUOTES, $$$)
      - pattern: PlainTextAuthProvider($$$, password=$QUOTES)
      - pattern: PlainTextAuthProvider($$$, password=$QUOTES, $$$)
      - pattern: SaslAuthProvider($$$, password=$QUOTES)
      - pattern: SaslAuthProvider($$$, password=$QUOTES, $$$)
      - pattern: PlainTextAuthProvider(username='user', password='')

  inside_module_with_import_statement:
    inside:
      stopBy: end
      kind: module
      has:
        kind: import_from_statement
        pattern: from cassandra.auth import PlainTextAuthProvider

rule:
  any:
    - pattern: cassandra.auth.PlainTextAuthProvider($USER, $QUOTES)
    - pattern: cassandra.auth.PlainTextAuthProvider($USER, $QUOTES, $$$)
    - pattern: cassandra.auth.PlainTextAuthProvider($$$, password=$QUOTES)
    - pattern: cassandra.auth.PlainTextAuthProvider($$$, password=$QUOTES, $$$)
    - pattern: cassandra.auth.SaslAuthProvider($$$, password=$QUOTES)
    - pattern: cassandra.auth.SaslAuthProvider($$$, password=$QUOTES, $$$)
    - any:
        - matches: from_imported_module
          follows:
            stopBy: end
            matches: inside_module_with_import_statement

constraints:
  QUOTES:
    regex: (''|""|``)
