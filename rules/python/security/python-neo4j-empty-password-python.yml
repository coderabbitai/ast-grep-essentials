id: python-neo4j-empty-password-python
severity: warning
language: python
message: >-
      The application creates a database connection with an empty password.
      This can lead to unauthorized access by either an internal or external
      malicious actor. To prevent this vulnerability, enforce authentication
      when connecting to a database by using environment variables to securely
      provide credentials or retrieving them from a secure vault or HSM
      (Hardware Security Module).
note: >-
  [CWE-287] Improper Authentication.
  [REFERENCES]
      - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html

ast-grep-essentials: true

utils:
  define_string:
    kind: string
    all:
      - has:
          kind: string_start
          nthChild: 1
      - has:
          kind: string_end
          nthChild: 2

  define_password:
    any:
      - matches: define_string
      - kind: identifier
        pattern: $PWD_IDENTIFIER
        inside:
          stopBy: end
          follows:
            stopBy: end
            kind: expression_statement
            has:
              stopBy: end
              kind: assignment
              nthChild: 1
              all:
                - has:
                    nthChild: 1
                    kind: identifier
                    field: left
                    pattern: $PWD_IDENTIFIER
                - has:
                    nthChild: 2
                    matches: define_string

rule:
  any:
    #  basic_auth and custom_auth
    - kind: call
      any:
        - kind: call
          has:
            nthChild: 1
            kind: attribute
            regex: ^(neo4j.custom_auth|neo4j.basic_auth)$
            precedes:
              kind: argument_list
              has:
                nthChild:
                  position: 2
                  ofRule:
                    not:
                      kind: comment
                matches: define_password
    - kind: call
      any:
        - kind: call
          has:
            nthChild: 1
            kind: identifier
            regex: ^basic_auth$
            precedes:
              kind: argument_list
              has:
                nthChild:
                  position: 2
                  ofRule:
                    not:
                      kind: comment
                matches: define_password

      inside:
        stopBy: end
        follows:
          stopBy: end
          kind: import_from_statement
          all:
            - has:
                nthChild: 1
                kind: dotted_name
                field: module_name
                regex: ^neo4j$
                precedes:
                  stopBy: end
                  kind: dotted_name
                  regex: ^basic_auth$
    - kind: call
      any:
        - kind: call
          has:
            nthChild: 1
            kind: identifier
            regex: ^custom_auth$
            precedes:
              kind: argument_list
              has:
                nthChild:
                  position: 2
                  ofRule:
                    not:
                      kind: comment
                matches: define_password

      inside:
        stopBy: end
        follows:
          stopBy: end
          kind: import_from_statement
          all:
            - has:
                nthChild: 1
                kind: dotted_name
                field: module_name
                regex: ^neo4j$
                precedes:
                  stopBy: end
                  kind: dotted_name
                  regex: ^custom_auth$

    #  kerberos_auth and bearer_auth
    - kind: call
      any:
        - kind: call
          has:
            nthChild: 1
            kind: attribute
            regex: ^(neo4j.kerberos_auth|neo4j.bearer_auth)$
            precedes:
              kind: argument_list
              has:
                nthChild:
                  position: 1
                  ofRule:
                    not:
                      kind: comment
                matches: define_password
    - kind: call
      any:
        - kind: call
          has:
            nthChild: 1
            kind: identifier
            regex: ^kerberos_auth$
            precedes:
              kind: argument_list
              has:
                nthChild:
                  position: 1
                  ofRule:
                    not:
                      kind: comment
                matches: define_password

      inside:
        stopBy: end
        follows:
          stopBy: end
          kind: import_from_statement
          all:
            - has:
                nthChild: 1
                kind: dotted_name
                field: module_name
                regex: ^neo4j$
                precedes:
                  stopBy: end
                  kind: dotted_name
                  regex: ^kerberos_auth$
    - kind: call
      any:
        - kind: call
          has:
            nthChild: 1
            kind: identifier
            regex: ^bearer_auth$
            precedes:
              kind: argument_list
              has:
                nthChild:
                  position: 1
                  ofRule:
                    not:
                      kind: comment
                matches: define_password

      inside:
        stopBy: end
        follows:
          stopBy: end
          kind: import_from_statement
          all:
            - has:
                nthChild: 1
                kind: dotted_name
                field: module_name
                regex: ^neo4j$
                precedes:
                  stopBy: end
                  kind: dotted_name
                  regex: ^bearer_auth$
