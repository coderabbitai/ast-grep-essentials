id: python-tormysql-empty-password-python
language: python
severity: warning
message: >-
  The application creates a database connection with an empty password.
  This can lead to unauthorized access by either an internal or external
  malicious actor. To prevent this vulnerability, enforce authentication
  when connecting to a database by using environment variables to securely
  provide credentials or retrieving them from a secure vault or HSM
  (Hardware Security Module).
note: >-
  [CWE-287]: Improper Authentication
  [OWASP A07:2021]: Identification and Authentication Failures
  [REFERENCES]
       https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html

ast-grep-essentials: true

utils:
  python-tormysql-hardcoded-secret:
    kind: call
    all:
      - has:
          kind: attribute
          all:
            - has:
                kind: identifier
                nthChild: 1
                regex: ^tormysql$
            - has:
                kind: identifier
                nthChild: 2
                regex: ^ConnectionPool$
      - has:
          kind: argument_list
          has:
            kind: keyword_argument
            all:
              - has:
                  kind: identifier
                  nthChild: 1
                  regex: ^(password|passwd)$
              - has:
                  kind: string
                  not:
                    has:
                      kind: string_content

  python-tormysql-hardcoded-secret_INSTANCE:
    kind: call
    all:
      - has:
          kind: attribute
          all:
            - has:
                kind: identifier
                nthChild: 1
                regex: ^tormysql$
            - has:
                kind: identifier
                nthChild: 2
                regex: ^ConnectionPool$
      - has:
          kind: argument_list
          has:
            kind: keyword_argument
            all:
              - has:
                  kind: identifier
                  nthChild: 1
                  regex: ^(password|passwd)$
              - has:
                  kind: identifier
                  nthChild: 2
                  pattern: $PASSWORD
      - any:
          - inside:
              stopBy: end
              follows:
                stopBy: end
                kind: expression_statement
                has:
                  kind: assignment
                  all:
                    - has:
                        kind: identifier
                        nthChild: 1
                        pattern: $PASSWORD
                    - has:
                        kind: string
                        not:
                          has:
                            kind: string_content
          - follows:
              stopBy: end
              kind: expression_statement
              has:
                kind: assignment
                all:
                  - has:
                      kind: identifier
                      nthChild: 1
                      pattern: $PASSWORD
                  - has:
                      kind: string
                      not:
                        has:
                          kind: string_content

  ConnectionPool(password=""):
    kind: call
    all:
      - has:
          kind: identifier
          nthChild: 1
          regex: ^ConnectionPool$
      - has:
          kind: argument_list
          has:
            kind: keyword_argument
            all:
              - has:
                  kind: identifier
                  nthChild: 1
                  regex: ^(password|passwd)$
              - has:
                  kind: string
                  not:
                    has:
                      kind: string_content
      - any:
          - inside:
              stopBy: end
              follows:
                stopBy: end
                kind: import_from_statement
                pattern: from tormysql import ConnectionPool
          - follows:
              stopBy: end
              kind: import_from_statement
              pattern: from tormysql import ConnectionPool

  ConnectionPool(password="")_INSTANCE:
    kind: call
    all:
      - has:
          kind: identifier
          nthChild: 1
          regex: ^ConnectionPool$
      - has:
          kind: argument_list
          has:
            kind: keyword_argument
            all:
              - has:
                  kind: identifier
                  nthChild: 1
                  regex: ^(password|passwd)$
              - has:
                  kind: identifier
                  nthChild: 2
                  pattern: $PASSWORD
      - any:
          - inside:
              stopBy: end
              follows:
                stopBy: end
                kind: expression_statement
                has:
                  kind: assignment
                  all:
                    - has:
                        kind: identifier
                        nthChild: 1
                        pattern: $PASSWORD
                    - has:
                        kind: string
                        not:
                          has:
                            kind: string_content
          - follows:
              stopBy: end
              kind: expression_statement
              has:
                kind: assignment
                all:
                  - has:
                      kind: identifier
                      nthChild: 1
                      pattern: $PASSWORD
                  - has:
                      kind: string
                      not:
                        has:
                          kind: string_content
      - any:
          - inside:
              stopBy: end
              follows:
                stopBy: end
                kind: import_from_statement
                pattern: from tormysql import ConnectionPool
          - follows:
              stopBy: end
              kind: import_from_statement
              pattern: from tormysql import ConnectionPool

  $VAR(password=""):
    kind: call
    all:
      - has:
          kind: identifier
          nthChild: 1
          pattern: $VAR
      - has:
          kind: argument_list
          has:
            kind: keyword_argument
            all:
              - has:
                  kind: identifier
                  nthChild: 1
                  regex: ^(password|passwd)$
              - has:
                  kind: string
                  not:
                    has:
                      kind: string_content
      - any:
          - inside:
              stopBy: end
              follows:
                stopBy: end
                kind: import_from_statement
                pattern: from tormysql import ConnectionPool as $VAR
          - follows:
              stopBy: end
              kind: import_from_statement
              pattern: from tormysql import ConnectionPool as $VAR

  $VAR(password="")_INSTANCE:
    kind: call
    all:
      - has:
          kind: identifier
          nthChild: 1
          pattern: $VAR
      - has:
          kind: argument_list
          has:
            kind: keyword_argument
            all:
              - has:
                  kind: identifier
                  nthChild: 1
                  regex: ^(password|passwd)$
              - has:
                  kind: identifier
                  nthChild: 2
                  pattern: $PASSWORD
      - any:
          - inside:
              stopBy: end
              follows:
                stopBy: end
                kind: expression_statement
                has:
                  kind: assignment
                  all:
                    - has:
                        kind: identifier
                        nthChild: 1
                        pattern: $PASSWORD
                    - has:
                        kind: string
                        not:
                          has:
                            kind: string_content
          - follows:
              stopBy: end
              kind: expression_statement
              has:
                kind: assignment
                all:
                  - has:
                      kind: identifier
                      nthChild: 1
                      pattern: $PASSWORD
                  - has:
                      kind: string
                      not:
                        has:
                          kind: string_content
      - any:
          - inside:
              stopBy: end
              follows:
                stopBy: end
                kind: import_from_statement
                pattern: from tormysql import ConnectionPool as $VAR
          - follows:
              stopBy: end
              kind: import_from_statement
              pattern: from tormysql import ConnectionPool as $VAR

rule:
  any:
    - matches: python-tormysql-hardcoded-secret
    - matches: python-tormysql-hardcoded-secret_INSTANCE
    - matches: ConnectionPool(password="")
    - matches: ConnectionPool(password="")_INSTANCE
    - matches: $VAR(password="")
    - matches: $VAR(password="")_INSTANCE
