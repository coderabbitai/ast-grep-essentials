id: ruby-octokit-hardcoded-secret-ruby
language: ruby
severity: warning
message: >-
  A secret is hard-coded in the application. Secrets stored in source
  code, such as credentials, identifiers, and other types of sensitive data,
  can be leaked and used by internal or external malicious actors. Use
  environment variables to securely provide credentials and other secrets or
  retrieve them from a secure vault or Hardware Security Module (HSM).
note: >-
  [CWE-798] Use of Hard-coded Credentials.
  [REFERENCES]
      - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html

ast-grep-essentials: true

utils:
  Octokit::Client.new(password:""):
    # Octokit::Client.new(..., password: "", ...)
   kind: call
   all:
      - has:
          stopBy: neighbor
          kind: scope_resolution
          regex: ^Octokit::Client$
      - has:
          stopBy: neighbor
          regex: ^.$
      - has:
          stopBy: neighbor
          kind: identifier
          regex: ^new$
      - has:
          stopBy: neighbor
          kind: argument_list
          has:
            stopBy: neighbor
            kind: pair
            all:
              - has:
                  stopBy: neighbor
                  any:
                  - kind: simple_symbol
                    regex: ^:password$|^:access_token$|^:client_secret$
                  - kind: hash_key_symbol
                    regex: ^password$|^access_token$|^client_secret$
              - has:
                  stopBy: neighbor
                  kind: string
      - any:
        - inside:
            stopBy: end
            follows:
              stopBy: end
              kind: call
              pattern: require 'octokit'
        - follows:
              stopBy: end
              kind: call
              pattern: require 'octokit'
  Octokit::Client.new(password:"")_Instance:
   kind: call
   all:
      - has:
          stopBy: neighbor
          kind: scope_resolution
          regex: ^Octokit::Client$
      - has:
          stopBy: neighbor
          regex: ^.$
      - has:
          stopBy: neighbor
          kind: identifier
          regex: ^new$
      - has:
          stopBy: neighbor
          kind: argument_list
          has:
            stopBy: neighbor
            kind: pair
            all:
              - has:
                  stopBy: neighbor
                  any:
                  - kind: simple_symbol
                    regex: ^:password$|^:access_token$|^:client_secret$
                  - kind: hash_key_symbol
                    regex: ^password$|^access_token$|^client_secret$
              - has:
                  stopBy: neighbor
                  kind: identifier
                  pattern: $SECRET
      - any:
        - inside:
            stopBy: end
            follows:
              stopBy: end
              kind: call
              pattern: require 'octokit'
        - follows:
              stopBy: end
              kind: call
              pattern: require 'octokit'
      - any:
          - follows:
              stopBy: end
              kind: assignment
              pattern: $SECRET = $PASS
          - inside:
              stopBy: end
              follows:
               stopBy: end
               kind: assignment
               pattern: $SECRET = $PASS
rule:
 kind: call
 any:
 - matches: Octokit::Client.new(password:"")
 - matches: Octokit::Client.new(password:"")_Instance
 all:
      - not:
            has:
                stopBy: end
                kind: ERROR
      - not:
            inside:
                stopBy: end
                kind: ERROR

constraints:
  PASS:
   kind: string