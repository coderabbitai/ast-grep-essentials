id: ruby-mysql2-hardcoded-secret-ruby
language: ruby
severity: warning
message: >-
  A secret is hard-coded in the application. Secrets stored in source
  code, such as credentials, identifiers, and other types of sensitive data,
  can be leaked and used by internal or external malicious actors. Use
  environment variables to securely provide credentials and other secrets or
  retrieve them from a secure vault or Hardware Security Module (HSM).
note: >-
  [CWE-798]: Use of Hard-coded Credentials
  [OWASP A07:2021]: Identification and Authentication Failures
  [REFERENCES]
       https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html

ast-grep-essentials: true

utils:
  match_Mysql2:Client:
    kind: call
    all:
      - has:
          kind: scope_resolution
          all:
            - has:
                kind: constant
                field: scope
                regex: "^Mysql2$"
            - has:
                kind: constant
                field: name
                regex: "^Client$"
      - has:
          kind: identifier
          regex: "^new$"
      - has:
          kind: argument_list
          has:
            kind: pair
            all:
              - has:
                  stopBy: end
                  kind: hash_key_symbol
                  regex: "^password$"
              - has:
                  kind: string
                  has:
                    kind: string_content
    inside:
      stopBy: end
      follows:
        stopBy: end
        kind: call
        all:
          - has:
              kind: identifier
              regex: "^require$"
          - has:
              kind: argument_list
              has:
                kind: string
                has:
                  kind: string_content
                  regex: "^mysql2$"
  match_Mysql2:Client_with_identifier:
    kind: call
    all:
      - has:
          kind: scope_resolution
          all:
            - has:
                kind: constant
                field: scope
                regex: "^Mysql2$"
            - has:
                kind: constant
                field: name
                regex: "^Client$"
      - has:
          kind: identifier
          regex: "^new$"
      - has:
          kind: argument_list
          has:
            kind: pair
            all:
              - has:
                  stopBy: end
                  kind: hash_key_symbol
                  regex: "^password$"
              - has:
                  kind: identifier
                  pattern: $A
    any:
      - inside:
          stopBy: end
          follows:
            stopBy: end
            kind: assignment
            all:
              - has:
                  kind: identifier
                  pattern: $A
              - has:
                  kind: string
                  has:
                    kind: string_content
            follows:
              stopBy: end
              kind: call
              all:
                - has:
                    kind: identifier
                    regex: "^require$"
                - has:
                    kind: argument_list
                    has:
                      kind: string
                      has:
                        kind: string_content
                        regex: "^mysql2$"
      - follows:
          stopBy: end
          kind: assignment
          all:
            - has:
                kind: identifier
                pattern: $A
            - has:
                kind: string
                has:
                  kind: string_content
          follows:
            stopBy: end
            kind: call
            all:
              - has:
                  kind: identifier
                  regex: "^require$"
              - has:
                  kind: argument_list
                  has:
                    kind: string
                    has:
                      kind: string_content
                      regex: "^mysql2$"

  match_Mysql3:
    kind: call
    all:
      - has:
          kind: scope_resolution
          all:
            - has:
                kind: constant
                field: scope
                regex: "^Mysql2$"
            - has:
                kind: constant
                field: name
                regex: "^Client$"
      - has:
          kind: identifier
          regex: "^new$"
      - has:
          kind: argument_list
          has:
            kind: pair
            all:
              - has:
                  stopBy: end
                  kind: hash_key_symbol
                  regex: "^password$"
              - has:
                  kind: string
                  has:
                    kind: string_content
    follows:
      stopBy: end
      kind: call
      all:
        - has:
            kind: identifier
            regex: "^require$"
        - has:
            kind: argument_list
            has:
              kind: string
              has:
                kind: string_content
                regex: "^mysql2$"
  match_Mysql2:Client_with_identifier2:
    kind: call
    all:
      - has:
          kind: scope_resolution
          all:
            - has:
                kind: constant
                field: scope
                regex: "^Mysql2$"
            - has:
                kind: constant
                field: name
                regex: "^Client$"
      - has:
          kind: identifier
          regex: "^new$"
      - has:
          kind: argument_list
          has:
            kind: pair
            all:
              - has:
                  kind: hash_key_symbol
                  regex: "^password$"
              - has:
                  kind: identifier
                  pattern: $R
    follows:
      stopBy: end
      kind: assignment
      all:
        - has:
            kind: identifier
            pattern: $R
        - has:
            kind: string
            has:
              kind: string_content
      inside:
        stopBy: end
        kind: singleton_method
        inside:
          stopBy: end
          follows:
            stopBy: end
            kind: call
            all:
              - has:
                  kind: identifier
                  regex: "^require$"
              - has:
                  kind: argument_list
                  has:
                    kind: string
                    has:
                      kind: string_content
                      regex: "^mysql2$"

rule:
  any:
    - matches: match_Mysql2:Client
    - matches: match_Mysql3
    - matches: match_Mysql2:Client_with_identifier
    - matches: match_Mysql2:Client_with_identifier2

