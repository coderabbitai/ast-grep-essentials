id: hardcoded-secret-rsa-passphrase-ruby
language: ruby
severity: warning
message: >-
  Found the use of an hardcoded passphrase for RSA. The passphrase can be
  easily discovered, and therefore should not be stored in source-code. It
  is recommended to remove the passphrase from source-code, and use system
  environment variables or a restricted configuration file.
note: >-
  [CWE-798]: Use of Hard-coded Credentials
  [OWASP A07:2021]: Identification and Authentication Failures
  [REFERENCES]
       https://cwe.mitre.org/data/definitions/522.html

ast-grep-essentials: true

utils:
  OpenSSL::PKey::RSA.new(..., '...'):
    kind: call
    all:
      - has:
          stopBy: neighbor
          kind: scope_resolution
          regex: ^OpenSSL::PKey::RSA$
      - has:
          stopBy: neighbor
          regex: ^.$
      - has:
          stopBy: neighbor
          kind: identifier
          regex: ^new$
      - has:
          stopBy: neighbor
          kind: argument_list
          all:
            - has:
                stopBy: neighbor
                kind: string
                nthChild: 2
                has:
                  stopBy: neighbor
                  kind: string_content

  OpenSSL::PKey::RSA.new(...).to_pem(..., '...'):
    kind: call
    all:
      - has:
          stopBy: neighbor
          kind: call
          pattern: OpenSSL::PKey::RSA.new($$$)
      - has:
          stopBy: neighbor
          regex: ^.$
      - has:
          stopBy: neighbor
          kind: identifier
          regex: ^to_pem|export$
      - has:
          stopBy: neighbor
          kind: argument_list
          has:
            stopBy: neighbor
            kind: string
            nthChild:
              position: 2
              ofRule:
                not:
                  kind: comment
            not:
              precedes:
                stopBy: end
                nthChild: 3

  OpenSSL::PKey::RSA.new(..., '...')_with_instance:
    kind: call
    all:
      - has:
          stopBy: neighbor
          kind: scope_resolution
          regex: ^OpenSSL::PKey::RSA$
      - has:
          stopBy: neighbor
          regex: ^.$
      - has:
          stopBy: neighbor
          kind: identifier
          regex: ^new$
      - has:
          stopBy: neighbor
          kind: argument_list
          all:
            - has:
                stopBy: neighbor
                pattern: $SECRET
                nthChild: 2

      - inside:
          stopBy: end
          kind: class
          has:
            stopBy: end
            kind: assignment
            pattern: $SECRET = '$SECRET_VALUE'

  OpenSSL::PKey::RSA.new(...).to_pem(..., '...')_with_instance:
    kind: call
    all:
      - has:
          stopBy: neighbor
          kind: call
          pattern: OpenSSL::PKey::RSA.new($$$)
      - has:
          stopBy: neighbor
          regex: ^.$
      - has:
          stopBy: neighbor
          kind: identifier
          regex: ^to_pem|export$
      - has:
          stopBy: neighbor
          kind: argument_list
          all:
            - has:
                stopBy: neighbor
                pattern: $SECRET
                nthChild: 2

      - inside:
          stopBy: end
          kind: class
          has:
            stopBy: end
            kind: assignment
            pattern: $SECRET = '$SECRET_VALUE'

  $OPENSSL.export(...,'...'):
    kind: call
    all:
      - has:
          stopBy: neighbor
          pattern: $OPENSSL
      - has:
          stopBy: neighbor
          regex: ^.$
      - has:
          stopBy: neighbor
          kind: identifier
          regex: ^export|to_pem$
      - has:
          stopBy: neighbor
          kind: argument_list
          all:
            - has:
                stopBy: neighbor
                kind: string
                nthChild: 2
                has:
                  stopBy: neighbor
                  kind: string_content

      - inside:
          stopBy: end
          kind: class
          has:
            stopBy: end
            kind: assignment
            pattern: $OPENSSL = OpenSSL::PKey::RSA.new

  $OPENSSL.to_pem(...,$ASSIGN):
    kind: call
    all:
      - has:
          stopBy: neighbor
          pattern: $OPENSSL
      - has:
          stopBy: neighbor
          regex: ^.$
      - has:
          stopBy: neighbor
          kind: identifier
          regex: ^export|to_pem$
      - has:
          stopBy: neighbor
          kind: argument_list
          all:
            - has:
                stopBy: neighbor
                pattern: $SECRET
                nthChild: 2
      - inside:
          stopBy: end
          kind: class
          all:
            - has:
                stopBy: end
                kind: assignment
                pattern: $OPENSSL = OpenSSL::PKey::RSA.new
            - has:
                stopBy: end
                kind: assignment
                pattern: $SECRET = '$SECRET_STRING'

  match_call:
    kind: call
    all:
      - has:
          stopBy: end
          kind: identifier
          field: receiver
      - has:
          stopBy: end
          kind: identifier
          field: method
      - has:
          stopBy: end
          kind: argument_list
          field: arguments
          all:
            - has:
                kind: call
            - has:
                kind: string
rule:
  kind: call
  any:
    - matches: OpenSSL::PKey::RSA.new(..., '...')
    - matches: OpenSSL::PKey::RSA.new(...).to_pem(..., '...')
    - matches: OpenSSL::PKey::RSA.new(..., '...')_with_instance
    - matches: OpenSSL::PKey::RSA.new(...).to_pem(..., '...')_with_instance
    - matches: $OPENSSL.export(...,'...')
    - matches: $OPENSSL.to_pem(...,$ASSIGN)
    - matches: match_call
