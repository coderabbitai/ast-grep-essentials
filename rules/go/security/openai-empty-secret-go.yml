id: openai-empty-secret-go
language: go
severity: warning
message: >-
  The application uses an empty credential. This can lead to unauthorized
  access by either an internal or external malicious actor. It is
  recommended to rotate the secret and retrieve them from a secure secret
  vault or Hardware Security Module (HSM), alternatively environment
  variables can be used if allowed by your company policy.
note: >-
  [CWE-287] Improper Authentication.
  [REFERENCES]
      - https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures

ast-grep-essentials: true

utils:
  MATCH_openai.NewClient:
    kind: call_expression
    all:
      - has:
          stopBy: neighbor
          kind: selector_expression
          all:
            - has:
                stopBy: neighbor
                kind: identifier
                regex: ^openai$
            - has:
                stopBy: neighbor
                kind: field_identifier
                regex: ^NewClient$
      - has:
          stopBy: neighbor
          kind: argument_list
          has:
            kind: interpreted_string_literal
            regex: \s*\"\"\s*
            nthChild:
              position: 1
              ofRule:
                not:
                  kind: comment
          not:
            has:
              nthChild:
                position: 2
                ofRule:
                  not:
                    kind: comment
      - any:
          - inside:
              stopBy: end
              follows:
                stopBy: end
                has:
                  stopBy: end
                  kind: import_spec
                  regex: "github.com/sashabaranov/go-openai"
          - follows:
              stopBy: end
              has:
                stopBy: end
                kind: import_spec
                regex: "github.com/sashabaranov/go-openai"
  MATCH_openai.NewClient_instance:
    kind: call_expression
    all:
      - has:
          stopBy: neighbor
          kind: selector_expression
          all:
            - has:
                stopBy: neighbor
                kind: identifier
                regex: ^openai$
            - has:
                stopBy: neighbor
                kind: field_identifier
                regex: ^NewClient$
      - has:
          stopBy: neighbor
          kind: argument_list
          has:
            kind: identifier
            pattern: $VAR
            nthChild:
              position: 1
              ofRule:
                not:
                  kind: comment
          not:
            has:
              nthChild:
                position: 2
                ofRule:
                  not:
                    kind: comment
      - any:
          - inside:
              stopBy: end
              follows:
                stopBy: end
                has:
                  stopBy: end
                  kind: import_spec
                  regex: "github.com/sashabaranov/go-openai"
          - follows:
              stopBy: end
              has:
                stopBy: end
                kind: import_spec
                regex: "github.com/sashabaranov/go-openai"
      - any:
          - follows:
              stopBy: end
              kind: assignment_statement
              all:
                - has:
                    kind: expression_list
                    has:
                      pattern: $VAR
                - has:
                    kind: expression_list
                    has:
                      pattern: $SECRET
          - inside:
              stopBy: end
              follows:
                stopBy: end
                kind: assignment_statement
                all:
                  - has:
                      kind: expression_list
                      has:
                        pattern: $VAR
                  - has:
                      kind: expression_list
                      has:
                        pattern: $SECRET
          - follows:
              kind: const_declaration
              all:
                - has:
                    kind: const_spec
                    has:
                      pattern: $VAR
                - has:
                    kind: expression_list
                    has:
                      pattern: $SECRET
          - inside:
              stopBy: end
              follows:
                kind: const_declaration
                all:
                  - has:
                      kind: const_spec
                      has:
                        pattern: $VAR
                  - has:
                      kind: expression_list
                      has:
                        pattern: $SECRET
          - follows:
              kind: var_declaration
              all:
                - has:
                    kind: var_spec
                    has:
                      pattern: $VAR
                - has:
                    kind: expression_list
                    has:
                      pattern: $SECRET
          - inside:
              stopBy: end
              follows:
                kind: var_declaration
                all:
                  - has:
                      kind: var_spec
                      has:
                        pattern: $VAR
                  - has:
                      kind: expression_list
                      has:
                        pattern: $SECRET
rule:
  kind: call_expression
  any:
    - matches: MATCH_openai.NewClient
    - matches: MATCH_openai.NewClient_instance
  not:
    all:
      - has:
          stopBy: end
          kind: ERROR
      - inside:
          stopBy: end
          kind: ERROR
constraints:
  SECRET:
    regex: ^""$
