id: rabbit-hardcoded-secret-swift
severity: warning
language: swift
message: >-
      A secret is hard-coded in the application. Secrets stored in source
      code, such as credentials, identifiers, and other types of sensitive data,
      can be leaked and used by internal or external malicious actors. Use
      environment variables to securely provide credentials and other secrets or
      retrieve them from a secure vault or Hardware Security Module (HSM).
note: >-
  [CWE-798] Use of Hard-coded Credentials.
  [REFERENCES]
      - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
ast-grep-essentials: true
utils:
    match_pattern_try_expression_directly:
        kind: try_expression
        not:
             inside:
               stopBy: end
               kind: call_expression
               has:
                  kind: simple_identifier
                  regex: ^Rabbit$
        has:
            stopBy: neighbor
            kind: call_expression
            all:
                - has:
                      kind: simple_identifier
                      regex: '^Rabbit$'
                - has:
                      kind: call_suffix
                      has:
                          kind: value_arguments
                          has:
                              kind: value_argument
                              all:
                                  - has:
                                        stopBy: end
                                        kind: simple_identifier
                                        regex: '^key$'
                                  - has:
                                        stopBy: neighbor
                                        kind: line_string_literal
                                        has:
                                            kind: line_str_text
                - not:
                    follows:
                      stopBy: end
                      kind: throw_keyword
                - not:
                    inside:
                      stopBy: end
                      kind: throw_keyword

    match_pattern_Rabbit_statement_directly:
     kind: call_expression
     not:
             inside:
               stopBy: end
               kind: call_expression
               has:
                  kind: simple_identifier
                  regex: ^Rabbit$
     all:
                - has:
                      stopBy: end
                      kind: simple_identifier
                      regex: '^Rabbit$'
                - has:
                      stopBy: end
                      kind: call_suffix
                      has:
                          stopBy: end
                          kind: value_arguments
                          has:
                              stopBy: end
                              kind: value_argument
                              all:
                                  - has:
                                        stopBy: end
                                        kind: simple_identifier
                                        regex: '^key$'
                                  - has:
                                        kind: line_string_literal
                                        has:
                                            stopBy: end
                                            kind: line_str_text
                - not:
                      inside:
                          stopBy: end
                          kind: try_expression
                - not:
                    follows:
                      stopBy: end
                      kind: throw_keyword
                - not:
                    inside:
                      stopBy: end
                      kind: throw_keyword
                - not:
                    inside:
                        kind: function_declaration

    match_pattern_Rabbit_expression_with_instance:
      kind: call_expression
      not:
             inside:
               stopBy: end
               kind: call_expression
               has:
                  kind: simple_identifier
                  regex: ^Rabbit$
      all:
                - has:
                      kind: simple_identifier
                      regex: '^Rabbit$'
                - has:
                      kind: call_suffix
                      has:
                          kind: value_arguments
                          has:
                              kind: value_argument
                              all:
                                  - has:
                                        stopBy: end
                                        kind: simple_identifier
                                        regex: '^key$'
                                  - has:
                                        kind: simple_identifier
                                        nthChild: 2
                                        pattern: $R
                - not:
                      inside:
                          stopBy: neighbor
                          kind: try_expression
                - any:
                  - follows:
                      stopBy: end
                      kind: property_declaration
                      all:
                          - has:
                                kind: pattern
                                has:
                                    stopBy: end
                                    kind: simple_identifier
                                    pattern: $R
                          - has:
                                stopBy: neighbor
                                kind: call_expression
                                pattern: Array($SECRET.utf8)
                  - inside:
                      stopBy: end
                      follows:
                       stopBy: end
                       kind: property_declaration
                       all:
                          - has:
                                kind: pattern
                                has:
                                    kind: simple_identifier
                                    pattern: $R
                          - has:
                                stopBy: neighbor
                                kind: call_expression
                                pattern: Array($SECRET.utf8)
                - not:
                    follows:
                      stopBy: end
                      kind: throw_keyword
                - not:
                    inside:
                      stopBy: end
                      kind: throw_keyword
                - not:
                    inside:
                        kind: function_declaration

    match_pattern_try_expression_with_instance:
     kind: try_expression
     not:
             inside:
               stopBy: end
               kind: call_expression
               has:
                  kind: simple_identifier
                  regex: ^Rabbit$
     all:
      - has:
         stopBy: neighbor
         kind: call_expression
         all:
                - has:
                      kind: simple_identifier
                      regex: '^Rabbit$'
                - has:
                      kind: call_suffix
                      has:
                          kind: value_arguments
                          has:
                              kind: value_argument
                              all:
                                  - has:
                                        stopBy: end
                                        kind: simple_identifier
                                        regex: '^key$'
                                  - has:
                                        kind: simple_identifier
                                        nthChild: 2
                                        pattern: $R
                - not:
                    follows:
                      stopBy: end
                      kind: throw_keyword
                - not:
                    inside:
                      stopBy: end
                      kind: throw_keyword
      - any:
                  - follows:
                      stopBy: end
                      kind: property_declaration
                      all:
                          - has:
                                kind: pattern
                                has:
                                    kind: simple_identifier
                                    pattern: $R
                          - has:
                                stopBy: neighbor
                                kind: call_expression
                                pattern: Array($SECRET.utf8)
                  - inside:
                      stopBy: end
                      follows:
                       stopBy: end
                       kind: property_declaration
                       all:
                          - has:
                                kind: pattern
                                has:
                                    kind: simple_identifier
                                    pattern: $R
                          - has:
                                stopBy: neighbor
                                kind: call_expression
                                pattern: Array($SECRET.utf8)
                                
    match_pattern_try_expression_with_utf8:
      kind: try_expression
      not:
             inside:
               stopBy: end
               kind: call_expression
               has:
                  kind: simple_identifier
                  regex: ^Rabbit$
      has:
          stopBy: end
          kind: call_expression
          all:
            - not:
                follows:
                  stopBy: end
                  kind: throw_keyword
            - not:
                inside:
                  stopBy: end
                  kind: throw_keyword
            - has:
                    stopBy: end
                    kind: simple_identifier
                    regex: '^Rabbit$'
            - has:
               stopBy: neighbor
               kind: call_suffix
               has:
                     stopBy: end
                     kind: value_argument
                     all:
                      - has:
                              stopBy: end
                              kind: simple_identifier
                              regex: ^key$
                      - has:
                         stopBy: end
                         kind: call_expression
                         pattern: Array($SECRET.utf8)
                       
    match_pattern_Rabbit_expression_with_utf8:
      kind: call_expression
      not:
             inside:
               stopBy: end
               kind: call_expression
               has:
                  kind: simple_identifier
                  regex: ^Rabbit$
      all:
       - not:
            inside:
                kind: function_declaration
       - not:
          follows:
            stopBy: end
            kind: throw_keyword
       - not:
          inside:
            stopBy: end
            kind: throw_keyword
       - not:
                    inside:
                          stopBy: end
                          kind: try_expression
       - has:
               stopBy: neighbor
               kind: simple_identifier
               regex: '^Rabbit$'
       - has:
               stopBy: neighbor
               kind: call_suffix
               has:
                     stopBy: end
                     kind: value_argument
                     all:
                      - has:
                              stopBy: end
                              kind: simple_identifier
                              regex: ^key$
                      - has:
                         stopBy: end
                         kind: call_expression
                         pattern: Array($SECRET.utf8)
                       
rule:
    any:
        - kind: try_expression
          any:
              - matches: match_pattern_try_expression_directly
              - matches:  match_pattern_try_expression_with_instance
              - matches: match_pattern_try_expression_with_utf8
              
        - kind: call_expression
          any:
            - matches: match_pattern_Rabbit_statement_directly
            - matches: match_pattern_Rabbit_expression_with_instance
            - matches: match_pattern_Rabbit_expression_with_utf8

constraints:
      SECRET:
        kind: line_string_literal
        has:
              stopBy: neighbor
              kind: line_str_text
              field: text

