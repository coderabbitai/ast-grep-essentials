id: aes-hardcoded-secret-swift
language: swift
severity: warning
message: >-
  A secret is hard-coded in the application. Secrets stored in source
  code, such as credentials, identifiers, and other types of sensitive data,
  can be leaked and used by internal or external malicious actors. Use
  environment variables to securely provide credentials and other secrets or
  retrieve them from a secure vault or Hardware Security Module (HSM).
note: >-
  [OWASP A07:2021]:Identification and Authentication Failures
  [CWE-272]: Least Privilege Violation
  [REFERENCES]
       https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
utils:
  match_pattern_try_expression_directly:
    kind: try_expression
    has:
      stopBy: neighbor
      kind: call_expression
      all:
        - has:
            stopBy: end
            kind: simple_identifier
            regex: "^AES$"
        - has:
            stopBy: end
            kind: call_suffix
            has:
              stopBy: end
              kind: value_arguments
              has:
                stopBy: end
                kind: value_argument
                all:
                  - has:
                      stopBy: end
                      kind: simple_identifier
                      regex: "^key$"
                  - has:
                      stopBy: neighbor
                      kind: line_string_literal
                      has:
                        stopBy: end
                        kind: line_str_text

  match_pattern_AES_statement_directly:
    kind: call_expression
    all:
      - has:
          stopBy: end
          kind: simple_identifier
          regex: "^AES$"
      - has:
          stopBy: end
          kind: call_suffix
          has:
            stopBy: end
            kind: value_arguments
            has:
              stopBy: end
              kind: value_argument
              all:
                - has:
                    stopBy: end
                    kind: simple_identifier
                    regex: "^key$"
                - has:
                    stopBy: end
                    kind: line_string_literal
                    has:
                      stopBy: neighbor
                      kind: line_str_text
      - not:
          inside:
            stopBy: end
            kind: try_expression

  match_pattern_AES_expression_with_instance:
    kind: call_expression
    all:
      - has:
          stopBy: end
          kind: simple_identifier
          regex: "^AES$"
      - has:
          stopBy: end
          kind: call_suffix
          has:
            stopBy: end
            kind: value_arguments
            has:
              stopBy: end
              kind: value_argument
              all:
                - has:
                    stopBy: end
                    kind: simple_identifier
                    regex: "^key$"
                - has:
                    stopBy: end
                    kind: simple_identifier
                    nthChild: 2
                    pattern: $R
      - not:
          inside:
            stopBy: neighbor
            kind: try_expression
      - follows:
          stopBy: end
          kind: property_declaration
          all:
            - has:
                stopBy: end
                kind: pattern
                has:
                  stopBy: end
                  kind: simple_identifier
                  pattern: $R
            - has:
                stopBy: neighbor
                kind: call_expression
                pattern: Array("$$$".utf8)

  match_pattern_try_expression_with_instance:
    kind: try_expression
    all:
      - has:
          stopBy: neighbor
          kind: call_expression
          all:
            - has:
                stopBy: end
                kind: simple_identifier
                regex: "^AES$"
            - has:
                stopBy: end
                kind: call_suffix
                has:
                  stopBy: end
                  kind: value_arguments
                  has:
                    stopBy: end
                    kind: value_argument
                    all:
                      - has:
                          stopBy: end
                          kind: simple_identifier
                          regex: "^key$"
                      - has:
                          stopBy: end
                          kind: simple_identifier
                          nthChild: 2
                          pattern: $R
      - follows:
          stopBy: end
          kind: property_declaration
          all:
            - has:
                stopBy: end
                kind: pattern
                has:
                  stopBy: end
                  kind: simple_identifier
                  pattern: $R
            - has:
                stopBy: neighbor
                kind: call_expression
                pattern: Array("$$$".utf8)

  match_pattern_AES_expression_with_utf8:
    kind: call_expression
    all:
      - has:
          stopBy: neighbor
          kind: simple_identifier
          regex: "^AES$"
      - has:
          stopBy: neighbor
          kind: call_suffix
          has:
            stopBy: end
            kind: value_argument
            all:
              - has:
                  stopBy: end
                  kind: simple_identifier
                  regex: "^key$"
              - has:
                  stopBy: end
                  kind: call_expression
                  all:
                    - has:
                        stopBy: neighbor
                        kind: simple_identifier
                        regex: "^Array$"
                    - has:
                        stopBy: neighbor
                        kind: call_suffix
                        has:
                          stopBy: end
                          kind: value_argument
                          has:
                            stopBy: neighbor
                            kind: navigation_expression
                            all:
                              - has:
                                  stopBy: neighbor
                                  kind: line_string_literal
                                  has:
                                    stopBy: neighbor
                                    kind: line_str_text
                              - has:
                                  stopBy: neighbor
                                  kind: navigation_suffix
                                  has:
                                    stopBy: neighbor
                                    kind: simple_identifier
                                    regex: "^utf8$"

  match_pattern_try_expression_with_utf8:
    kind: try_expression
    has:
      stopBy: neighbor
      kind: call_expression
      all:
        - has:
            stopBy: neighbor
            kind: simple_identifier
            regex: "^AES$"
        - has:
            stopBy: neighbor
            kind: call_suffix
            has:
              stopBy: end
              kind: value_argument
              all:
                - has:
                    stopBy: neighbor
                    kind: simple_identifier
                    regex: "^key$"
                - has:
                    stopBy: neighbor
                    kind: call_expression
                    all:
                      - has:
                          stopBy: neighbor
                          kind: simple_identifier
                          regex: "^Array$"
                      - has:
                          stopBy: neighbor
                          kind: call_suffix
                          has:
                            stopBy: end
                            kind: value_argument
                            has:
                              stopBy: neighbor
                              kind: navigation_expression
                              all:
                                - has:
                                    stopBy: neighbor
                                    kind: line_string_literal
                                    has:
                                      stopBy: neighbor
                                      kind: line_str_text
                                - has:
                                    stopBy: neighbor
                                    kind: navigation_suffix
                                    has:
                                      stopBy: neighbor
                                      kind: simple_identifier
                                      regex: "^utf8$"
rule:
  any:
    - kind: try_expression
      any:
        - matches: match_pattern_try_expression_directly
        - matches: match_pattern_try_expression_with_instance
        - matches: match_pattern_try_expression_with_utf8

    - kind: call_expression
      any:
        - matches: match_pattern_AES_statement_directly
        - matches: match_pattern_AES_expression_with_instance
        - matches: match_pattern_AES_expression_with_utf8
