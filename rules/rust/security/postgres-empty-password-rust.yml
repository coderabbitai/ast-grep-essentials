id: postgres-empty-password-rust
language: rust
severity: warning
message: >-
  The application uses an empty credential. This can lead to unauthorized
  access by either an internal or external malicious actor. It is
  recommended to rotate the secret and retrieve them from a secure secret
  vault or Hardware Security Module (HSM), alternatively environment
  variables can be used if allowed by your company policy.
note: >-
  [CWE-287] Improper Authentication.
  [REFERENCES]
  - https://docs.rs/postgres/latest/postgres/
  - https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures
utils:
  MATCH_PATTERN_WITH_INSTANCE:
    kind: call_expression
    all:
      - has:
          stopBy: neighbor
          kind: field_expression
          all:
            - has:
                stopBy: neighbor
                kind: call_expression
                all:
                  - has:
                      stopBy: neighbor
                      kind: field_expression
                      all:
                        - has:
                            stopBy: end
                            kind: call_expression
                            all:
                              - has:
                                  stopBy: neighbor
                                  kind: field_expression
                                  all:
                                    - has:
                                        stopBy: neighbor
                                        kind: identifier
                                        pattern: $C
                              - has:
                                  stopBy: neighbor
                                  kind: arguments
                        - has:
                            stopBy: neighbor
                            kind: field_identifier
                  - has:
                      stopBy: neighbor
                      kind: arguments
            - has:
                stopBy: neighbor
                kind: field_identifier
                regex: "^password$"
      - has:
          stopBy: neighbor
          kind: arguments
          regex: \(\s*\"\"\s*\)
      - inside:
          stopBy: end
          kind: expression_statement
          follows:
            stopBy: end
            kind: let_declaration
            all:
              - has:
                  stopBy: neighbor
                  kind: identifier
                  pattern: $C
              - has:
                  stopBy: neighbor
                  kind: call_expression
                  pattern: postgres::Config::new()

  MATCH_PATTERN_DIRECTLY:
    kind: call_expression
    all:
      - has:
          stopBy: neighbor
          kind: field_expression
          all:
            - has:
                stopBy: neighbor
                kind: call_expression
                all:
                  - has:
                      stopBy: neighbor
                      kind: field_expression
                      all:
                        - has:
                            stopBy: neighbor
                            kind: call_expression
                            all:
                              - has:
                                  stopBy: neighbor
                                  kind: field_expression
                                  has:
                                    stopBy: neighbor
                                    kind: call_expression
                                    pattern: postgres::Config::new()
                              - has:
                                  stopBy: neighbor
                                  kind: arguments
                        - has:
                            stopBy: neighbor
                            kind: field_identifier
                  - has:
                      stopBy: neighbor
                      kind: arguments
            - has:
                stopBy: neighbor
                kind: field_identifier
                regex: "^password$"
      - has:
          stopBy: neighbor
          kind: arguments
          regex: \(\s*\"\"\s*\)

rule:
  kind: call_expression
  any:
    - matches: MATCH_PATTERN_WITH_INSTANCE
    - matches: MATCH_PATTERN_DIRECTLY
