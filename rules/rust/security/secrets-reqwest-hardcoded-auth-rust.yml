id: secrets-reqwest-hardcoded-auth-rust
language: rust
severity: warning
message: >-
  A secret is hard-coded in the application. Secrets stored in source
  code, such as credentials, identifiers, and other types of sensitive data,
  can be leaked and used by internal or external malicious actors. It is
  recommended to rotate the secret and retrieve them from a secure secret
  vault or Hardware Security Module (HSM), alternatively environment
  variables can be used if allowed by your company policy.
note: >-
  [CWE-798] Use of Hard-coded Credentials.
  [REFERENCES]
      - https://docs.rs/reqwest/latest/reqwest/
      - https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures
utils:
  MATCH_PATTERN_ONE:
    kind: call_expression
    all:
      - has:
          stopBy: neighbor
          kind: field_expression
          all:
            - has:
                stopBy: neighbor
                kind: call_expression
                has:
                  stopBy: neighbor
                  kind: field_expression
                  all:
                    - has:
                        stopBy: neighbor
                        kind: identifier
                        pattern: $C
            - has:
                stopBy: neighbor
                kind: field_identifier
                regex: "^bearer_auth|basic_auth$"
      - has:
          stopBy: neighbor
          kind: arguments
          all:
            - has:
                stopBy: neighbor
                kind: string_literal
                has:
                  stopBy: neighbor
                  kind: string_content
            - has:
                stopBy: neighbor
                kind: call_expression
                all:
                  - has:
                      stopBy: neighbor
                      kind: identifier
                      regex: "^Some$"
                  - has:
                      stopBy: neighbor
                      kind: arguments
                      has:
                        stopBy: neighbor
                        kind: string_literal
                        has:
                          stopBy: neighbor
                          kind: string_content

      - inside:
          stopBy: end
          kind: let_declaration
          follows:
            stopBy: end
            kind: let_declaration
            all:
              - has:
                  stopBy: neighbor
                  kind: identifier
                  pattern: $C
              - has:
                  stopBy: neighbor
                  kind: call_expression
                  pattern: reqwest::Client::new($$$)

  MATCH_PATTERN_TWO:
    kind: call_expression
    all:
      - has:
          stopBy: neighbor
          kind: field_expression
          all:
            - has:
                stopBy: neighbor
                kind: call_expression
                has:
                  stopBy: neighbor
                  kind: field_expression
                  all:
                    - has:
                        stopBy: neighbor
                        kind: identifier
                        pattern: $C
            - has:
                stopBy: neighbor
                kind: field_identifier
                regex: "^bearer_auth|basic_auth$"
      - inside:
          stopBy: end
          kind: let_declaration
          follows:
            stopBy: end
            kind: let_declaration
            all:
              - has:
                  stopBy: neighbor
                  kind: identifier
                  pattern: $C
              - has:
                  stopBy: neighbor
                  kind: call_expression
                  pattern: reqwest::Client::new($$$)
      - has:
          stopBy: neighbor
          kind: arguments
          all:
            - has:
                stopBy: neighbor
                kind: string_literal
                has:
                  stopBy: neighbor
                  kind: string_content
            - not:
                has:
                  kind: call_expression

rule:
  kind: call_expression
  any:
    - matches: MATCH_PATTERN_ONE
    - matches: MATCH_PATTERN_TWO
