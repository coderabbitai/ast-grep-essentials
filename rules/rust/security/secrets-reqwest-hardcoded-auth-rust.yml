id: secrets-reqwest-hardcoded-auth-rust
language: rust
severity: warning
message: >-
  A secret is hard-coded in the application. Secrets stored in source
  code, such as credentials, identifiers, and other types of sensitive data,
  can be leaked and used by internal or external malicious actors. It is
  recommended to rotate the secret and retrieve them from a secure secret
  vault or Hardware Security Module (HSM), alternatively environment
  variables can be used if allowed by your company polic
note: >-
  [CWE-798]: Use of Hard-coded Credentials
  [REFERENCES]
    - https://docs.rs/reqwest/latest/reqwest/
    - https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures
ast-grep-essentials: true
utils:
  MATCH_PATTERN_ONE.basic_auth:
    kind: call_expression
    all:
      - has:
          stopBy: neighbor
          kind: field_expression
          all:
            - has:
                stopBy: end
                kind: identifier
                pattern: $C
            - has:
                stopBy: neighbor
                kind: field_identifier
                regex: ^basic_auth$
      - has:
          stopBy: end
          kind: arguments
          not:
            has:
              nthChild: 
               position: 3
               ofRule:
                 not:
                   kind: line_comment
          has:
            stopBy: neighbor
            kind: call_expression
            nthChild: 
              position: 2
              ofRule:
                not:
                  kind: line_comment
            all:
                  - has:
                      stopBy: neighbor
                      kind: identifier
                      regex: ^Some$
                  - has:
                      stopBy: neighbor
                      kind: arguments
                      has:
                        stopBy: neighbor
                        kind: string_literal
                        has:
                          kind: string_content
      - inside:
          stopBy: end
          all:
          - follows:
             stopBy: end
             kind: let_declaration
             all:
              - has:
                  stopBy: neighbor
                  kind: identifier
                  pattern: $C
              - has:
                  stopBy: neighbor
                  kind: call_expression
                  pattern: reqwest::Client::new($$$)
            #   - inside:
            #       stopBy: end
            #       kind: block
              
         
  MATCH_PATTERN_TWO.bearer_auth:
    kind: call_expression
    all:
      - has:
          stopBy: neighbor
          kind: field_expression
          all:
            - has:
                stopBy: end
                kind: identifier
                pattern: $C
            - has:
                stopBy: neighbor
                kind: field_identifier
                regex: ^bearer_auth$
      - inside:
          stopBy: end
          follows:
            stopBy: end
            kind: let_declaration
            all:
              - has:
                  stopBy: neighbor
                  kind: identifier
                  pattern: $C
              - has:
                  stopBy: neighbor
                  kind: call_expression
                  pattern: reqwest::Client::new($$$)
      - has:
          stopBy: neighbor
          kind: arguments
          has:
              stopBy: neighbor
              kind: string_literal
              nthChild: 
                position: 1
                ofRule:
                  not:
                    kind: line_comment
              has:
                stopBy: neighbor
                kind: string_content
          not:
            has:
              nthChild: 2
      - not:
              has:
                stopBy: end
                kind: call_expression
                all:
                  - has:
                      stopBy: neighbor
                      kind: identifier
                      regex: ^Some$
                  - has:
                      stopBy: neighbor
                      kind: arguments
                      has:
                        stopBy: neighbor
                        kind: identifier   

  MATCH_PATTERN_ONE.basic_auth_Instance:
    kind: call_expression
    all:
      - has:
          stopBy: neighbor
          kind: field_expression
          all:
            - has:
                stopBy: end
                kind: identifier
                pattern: $C
            - has:
                stopBy: neighbor
                kind: field_identifier
                regex: ^basic_auth$
      - has:
          stopBy: end
          kind: arguments
          not:
            has:
              nthChild: 
               position: 3
               ofRule:
                 not:
                   kind: line_comment
          has:
            stopBy: neighbor
            kind: call_expression
            nthChild: 
              position: 2
              ofRule:
                not:
                  kind: line_comment
            all:
                  - has:
                      stopBy: neighbor
                      kind: identifier
                      regex: ^Some$
                  - has:
                      stopBy: neighbor
                      kind: arguments
                      has:
                        stopBy: neighbor
                        kind: identifier
                        pattern: $PASSWORD
      - inside:
          stopBy: end
          all:
          - follows:
             stopBy: end
             kind: let_declaration
             all:
              - has:
                  stopBy: neighbor
                  kind: identifier
                  pattern: $C
              - has:
                  stopBy: neighbor
                  kind: call_expression
                  pattern: reqwest::Client::new($$$)
          - follows:
             stopBy: end
             kind: let_declaration
             all:
               - has:
                   kind: identifier
                   pattern: $PASSWORD
                   nthChild: 
                    position: 1
                    ofRule:
                      not:
                        kind: line_comment
               - has:
                   kind: string_literal
                   has:
                    kind: string_content
               - inside:
                   stopBy: end
                   kind: block

  MATCH_PATTERN_TWO.bearer_auth_Instance:
    kind: call_expression
    all:
      - has:
          stopBy: neighbor
          kind: field_expression
          all:
            - has:
                stopBy: end
                kind: identifier
                pattern: $C
            - has:
                stopBy: neighbor
                kind: field_identifier
                regex: ^bearer_auth$
      - inside:
          stopBy: end
          all:
            - follows:
               stopBy: end
               kind: let_declaration
               all:
               - has:
                  stopBy: neighbor
                  kind: identifier
                  pattern: $C
               - has:
                  stopBy: neighbor
                  kind: call_expression
                  pattern: reqwest::Client::new($$$)
            - follows:
               stopBy: end
               kind: let_declaration
               all:
               - has:
                   kind: identifier
                   pattern: $PASSWORD
                   nthChild: 1
               - has:
                   kind: string_literal
                   has:
                    kind: string_content
               - inside:
                   stopBy: end
                   kind: block
      - has:
          stopBy: end
          kind: arguments
          has:
              stopBy: neighbor
              kind: identifier
              pattern: $PASS
              nthChild: 
                position: 1
                ofRule:
                  not:
                    kind: line_comment
          not:
            has:
              nthChild: 2


rule:
 kind: call_expression
 any:
   - matches: MATCH_PATTERN_ONE.basic_auth
   - matches: MATCH_PATTERN_TWO.bearer_auth
   - matches: MATCH_PATTERN_ONE.basic_auth_Instance
   - matches: MATCH_PATTERN_TWO.bearer_auth_Instance
 not:
   all:
     - has:
         stopBy: end
         kind: ERROR
     - inside:
         stopBy: end
         kind: ERROR
